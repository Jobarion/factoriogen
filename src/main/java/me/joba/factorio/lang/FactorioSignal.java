package me.joba.factorio.lang;

public enum FactorioSignal {

    SIGNAL_0(true),
    SIGNAL_1(true),
    SIGNAL_2(true),
    SIGNAL_3(true),
    SIGNAL_4(true),
    SIGNAL_5(true),
    SIGNAL_6(true),
    SIGNAL_7(true),
    SIGNAL_8(true),
    SIGNAL_9(true),
    SIGNAL_A(true, "A"),
    SIGNAL_B(true, "B"),
    SIGNAL_C(true, "C"),
    SIGNAL_D(true, "D"),
    SIGNAL_E(true, "E"),
    SIGNAL_F(true, "F"),
    SIGNAL_G(true, "G"),
    SIGNAL_H(true, "H"),
    SIGNAL_I(true, "I"),
    SIGNAL_J(true, "J"),
    SIGNAL_K(true, "K"),
    SIGNAL_L(true, "L"),
    SIGNAL_M(true, "M"),
    SIGNAL_N(true, "N"),
    SIGNAL_O(true, "O"),
    SIGNAL_P(true, "P"),
    SIGNAL_Q(true, "Q"),
    SIGNAL_R(true, "R"),
    SIGNAL_S(true, "S"),
    SIGNAL_T(true, "T"),
    SIGNAL_U(true, "U"),
    SIGNAL_V(true, "V"),
    SIGNAL_W(true, "W"),
    SIGNAL_X(true, "X"),
    SIGNAL_Y(true, "Y"),
    SIGNAL_Z(true, "Z"),
    SIGNAL_RED(true),
    SIGNAL_GREEN(true),
    SIGNAL_BLUE(true),
    SIGNAL_YELLOW(true),
    SIGNAL_PINK(true),
    SIGNAL_CYAN(true),
    SIGNAL_WHITE(true),
    SIGNAL_GREY(true),
    SIGNAL_BLACK(true),
    SIGNAL_CHECK(true, null, true),
    SIGNAL_INFO(true, null, true),
    SIGNAL_DOT(true, null, true),
    WOODEN_CHEST,
    IRON_CHEST,
    STEEL_CHEST,
    STORAGE_TANK,
    TRANSPORT_BELT,
    FAST_TRANSPORT_BELT,
    EXPRESS_TRANSPORT_BELT,
    UNDERGROUND_BELT,
    FAST_UNDERGROUND_BELT,
    EXPRESS_UNDERGROUND_BELT,
    SPLITTER,
    FAST_SPLITTER,
    EXPRESS_SPLITTER,
    BURNER_INSERTER,
    INSERTER,
    LONG_HANDED_INSERTER,
    FAST_INSERTER,
    FILTER_INSERTER,
    STACK_INSERTER,
    STACK_FILTER_INSERTER,
    SMALL_ELECTRIC_POLE,
    MEDIUM_ELECTRIC_POLE,
    BIG_ELECTRIC_POLE,
    SUBSTATION,
    PIPE,
    PIPE_TO_GROUND,
    PUMP,
    RAIL,
    TRAIN_STOP,
    RAIL_SIGNAL,
    RAIL_CHAIN_SIGNAL,
    LOCOMOTIVE,
    CARGO_WAGON,
    FLUID_WAGON,
    ARTILLERY_WAGON,
    CAR,
    TANK,
    SPIDERTRON,
    SPIDERTRON_REMOTE,
    LOGISTIC_ROBOT,
    CONSTRUCTION_ROBOT,
    LOGISTIC_CHEST_ACTIVE_PROVIDER,
    LOGISTIC_CHEST_PASSIVE_PROVIDER,
    LOGISTIC_CHEST_STORAGE,
    LOGISTIC_CHEST_BUFFER,
    LOGISTIC_CHEST_REQUESTER,
    ROBOPORT,
    SMALL_LAMP,
    RED_WIRE,
    GREEN_WIRE,
    ARITHMETIC_COMBINATOR,
    DECIDER_COMBINATOR,
    CONSTANT_COMBINATOR,
    POWER_SWITCH,
    PROGRAMMABLE_SPEAKER,
    STONE_BRICK,
    CONCRETE,
    HAZARD_CONCRETE,
    REFINED_CONCRETE,
    REFINED_HAZARD_CONCRETE,
    LANDFILL,
    CLIFF_EXPLOSIVES,
    REPAIR_PACK,
    BLUEPRINT,
    DECONSTRUCTION_PLANNER,
    UPGRADE_PLANNER,
    BLUEPRINT_BOOK,
    BOILER,
    STEAM_ENGINE,
    SOLAR_PANEL,
    ACCUMULATOR,
    NUCLEAR_REACTOR,
    HEAT_PIPE,
    HEAT_EXCHANGER,
    STEAM_TURBINE,
    BURNER_MINING_DRILL,
    ELECTRIC_MINING_DRILL,
    OFFSHORE_PUMP,
    PUMPJACK,
    STONE_FURNACE,
    STEEL_FURNACE,
    ELECTRIC_FURNACE,
    ASSEMBLING_MACHINE_1,
    ASSEMBLING_MACHINE_2,
    ASSEMBLING_MACHINE_3,
    OIL_REFINERY,
    CHEMICAL_PLANT,
    CENTRIFUGE,
    LAB,
    BEACON,
    SPEED_MODULE,
    SPEED_MODULE_2,
    SPEED_MODULE_3,
    EFFECTIVITY_MODULE,
    EFFECTIVITY_MODULE_2,
    EFFECTIVITY_MODULE_3,
    PRODUCTIVITY_MODULE,
    PRODUCTIVITY_MODULE_2,
    PRODUCTIVITY_MODULE_3,
    WOOD,
    COAL,
    STONE,
    IRON_ORE,
    COPPER_ORE,
    URANIUM_ORE,
    RAW_FISH,
    IRON_PLATE,
    COPPER_PLATE,
    SOLID_FUEL,
    STEEL_PLATE,
    PLASTIC_BAR,
    SULFUR,
    BATTERY,
    EXPLOSIVES,
    CRUDE_OIL_BARREL,
    HEAVY_OIL_BARREL,
    LIGHT_OIL_BARREL,
    PETROLEUM_GAS_BARREL,
    SULFURIC_ACID_BARREL,
    WATER_BARREL,
    COPPER_CABLE,
    IRON_STICK,
    IRON_GEAR_WHEEL,
    EMPTY_BARREL,
    ELECTRONIC_CIRCUIT,
    ADVANCED_CIRCUIT,
    PROCESSING_UNIT,
    ENGINE_UNIT,
    ELECTRIC_ENGINE_UNIT,
    FLYING_ROBOT_FRAME,
    SATELLITE,
    ROCKET_CONTROL_UNIT,
    LOW_DENSITY_STRUCTURE,
    ROCKET_FUEL,
    NUCLEAR_FUEL,
    URANIUM_235,
    URANIUM_238,
    URANIUM_FUEL_CELL,
    USED_UP_URANIUM_FUEL_CELL,
    AUTOMATION_SCIENCE_PACK,
    LOGISTIC_SCIENCE_PACK,
    MILITARY_SCIENCE_PACK,
    CHEMICAL_SCIENCE_PACK,
    PRODUCTION_SCIENCE_PACK,
    UTILITY_SCIENCE_PACK,
    SPACE_SCIENCE_PACK,
    PISTOL,
    SUBMACHINE_GUN,
    SHOTGUN,
    COMBAT_SHOTGUN,
    ROCKET_LAUNCHER,
    FLAMETHROWER,
    LAND_MINE,
    FIREARM_MAGAZINE,
    PIERCING_ROUNDS_MAGAZINE,
    URANIUM_ROUNDS_MAGAZINE,
    SHOTGUN_SHELL,
    PIERCING_SHOTGUN_SHELL,
    CANNON_SHELL,
    EXPLOSIVE_CANNON_SHELL,
    URANIUM_CANNON_SHELL,
    EXPLOSIVE_URANIUM_CANNON_SHELL,
    ARTILLERY_SHELL,
    ROCKET,
    EXPLOSIVE_ROCKET,
    ATOMIC_BOMB,
    FLAMETHROWER_AMMO,
    GRENADE,
    CLUSTER_GRENADE,
    POISON_CAPSULE,
    SLOWDOWN_CAPSULE,
    DEFENDER_CAPSULE,
    DISTRACTOR_CAPSULE,
    DESTROYER_CAPSULE,
    LIGHT_ARMOR,
    HEAVY_ARMOR,
    MODULAR_ARMOR,
    POWER_ARMOR,
    POWER_ARMOR_MK2,
    SOLAR_PANEL_EQUIPMENT,
    FUSION_REACTOR_EQUIPMENT,
    BATTERY_EQUIPMENT,
    BATTERY_MK2_EQUIPMENT,
    BELT_IMMUNITY_EQUIPMENT,
    EXOSKELETON_EQUIPMENT,
    PERSONAL_ROBOPORT_EQUIPMENT,
    PERSONAL_ROBOPORT_MK2_EQUIPMENT,
    NIGHT_VISION_EQUIPMENT,
    ENERGY_SHIELD_EQUIPMENT,
    ENERGY_SHIELD_MK2_EQUIPMENT,
    PERSONAL_LASER_DEFENSE_EQUIPMENT,
    DISCHARGE_DEFENSE_EQUIPMENT,
    DISCHARGE_DEFENSE_REMOTE,
    STONE_WALL,
    GATE,
    GUN_TURRET,
    LASER_TURRET,
    FLAMETHROWER_TURRET,
    ARTILLERY_TURRET,
    ARTILLERY_TARGETING_REMOTE,
    RADAR,
    ROCKET_SILO,
    WATER,
    CRUDE_OIL,
    STEAM,
    HEAVY_OIL,
    LIGHT_OIL,
    PETROLEUM_GAS,
    SULFURIC_ACID,;

    private final String suffix;
    private final boolean reserved;
    private final boolean virtual;

    FactorioSignal(boolean virtual, String suffix) {
        this(virtual, suffix, false);
    }

    FactorioSignal(boolean virtual, String suffix, boolean reserved) {
        this.reserved = reserved;
        this.suffix = suffix;
        this.virtual = virtual;
    }

    FactorioSignal(boolean virtual) {
        this(virtual, null);
    }

    FactorioSignal() {
        this(false);
    }

    public boolean isReserved() {
        return reserved;
    }

    public boolean isVirtual() {
        return virtual;
    }

    public String getFactorioName() {
        if(suffix == null) {
            return this.name().toLowerCase().replace('_', '-');
        }
        return "signal-" + suffix;
    }
}
